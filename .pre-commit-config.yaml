default_language_version:
    python: python3.12
default_stages:
  - pre-commit
repos:
  # COMMIT MESSAGE CHECKERS
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.2
    hooks:
      - id: commitizen # Enforce Conventional Commits standard
        stages: [ commit-msg ]

  # DEPENDENCY CHECKERS
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.9
    hooks:
      - id: uv-lock
        args: ["--prerelease=allow"]
      - id: uv-export
        args: ["--no-dev", "--output-file=requirements.txt", "--prerelease=allow"]
      - id: uv-export
        args: ["--output-file=requirements-dev.txt", "--prerelease=allow"]

#  - repo: https://github.com/twu/skjold
#    rev: v0.6.2
#    hooks:
#      - id: skjold

  # CODE CHECKERS
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      #- id: no-commit-to-branch # Protect master branch from being committed
      #  args: [ "--branch", "master" ]
      - id: check-docstring-first  # Check docstring exists before imports
      - id: check-merge-conflict  # Check for the existence of files with merge conflict strings
      - id: check-builtin-literals  # Check for the use of dict()/list()/set() instead {}/[]
      - id: check-yaml  # Verify yaml syntax
      - id: check-added-large-files  # Check commit does not contain large file size
        args: ["--maxkb=1024"]
      - id: check-toml  # Verify toml syntax
      - id: end-of-file-fixer
      - id: trailing-whitespace

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-use-type-annotations  # Enforce type annotation instead of type comment
      - id: python-no-log-warn  # Check for deprecated warn() of loggers
      - id: python-no-eval  # Check for eval() function
      - id: python-check-blanket-noqa  # Enforce that noqa annotations always occur with specific codes
      - id: python-check-blanket-type-ignore  # Enforce that # type: ignore annotations always occur with specific codes

  # LINTERS
  - repo: https://github.com/IamTheFij/docker-pre-commit
    rev: v3.0.1
    hooks:
      - id: docker-compose-check  # Perform a docker compose check shell command

  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker # Lint docker-compose files, showing improvements

  # FORMATTERS
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade  # Upgrade syntax for newer versions of the language

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort  # Sort imports automatically
        args: [ "--profile", "black", "--filter-files" ]

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black  # Code formatting

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets  # Detect secrets placed in code
        exclude: "(^.*test.*|^.env$|^scripts/.*)"

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.0
    hooks:
      - id: mypy  # Check static typing
        exclude: "(^.*(_tests)|^.*test.*|^scripts/.*).py$"
        additional_dependencies:
          - types-python-dateutil
          - types-redis
          - types-requests
          - types-decorator

  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8  # Enforce common style guide
